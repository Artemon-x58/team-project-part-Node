{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "HealthyHub",
    "description": "API documentation for project...",
    "contact": {
      "email": "artem1145819@gmail.com"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "tags": [
    { "name": "Auth", "description": "Authorization endpoints" },
    { "name": "User", "description": "User endpoints" },
    { "name": "Food", "description": "Recommended food" }
  ],

  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [
          {
            "in": "query",
            "name": "avatarURL",
            "required": true,
            "type": "string",
            "description": "Get an avatar from 'gravatar'"
          },
          {
            "in": "query",
            "name": "token",
            "required": false,
            "type": "string",
            "description": "Default value is an empty string"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Description of request parameters:\n\n**name** - string, User`s name,\n\n**email** - string, User`s email,\n\n**password** - string, User`s password,\n\n**age** - integer, User`s age,\n\n**weight** - integer, User`s weight,\n\n**height** - integer, User`s height,\n\n**kef** - number, User`s kef,\n\n**gender** - string, User`s gender,\n\n**yourGoal** - string, User`s goal.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created session for existing user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorRemoveCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logged in",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Description of request parameters:\n\n**email** - string, User`s email,\n\n**password** - string, User`s password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the token to the user who logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithTokenSerializer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "User forgot password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Description of request parameters:\n\n**email** - string, User`s email",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForgotPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sending a new password to the user's email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPasswordResetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logged out",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Logout success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignOutUser"
                }
              }
            }
          },
          "401": {
            "description": "Token has expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUserTokenExpiredResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Receiving user data",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Date for the HomePage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendingUserData"
                }
              }
            }
          },
          "401": {
            "description": "Token has expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUserTokenExpiredResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotfound"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/update": {
      "put": {
        "tags": ["User"],
        "summary": "Updated user`s information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "description": "Description of request parameters:\n\n**name** - string, User`s name,\n\n**age** - integer, User`s age,\n\n**weight** - integer, User`s weight,\n\n**height** - integer, User`s height,\n\n**kef** - number, User`s kef,\n\n**gender** - string, User`s gender.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserInformation"
                }
              }
            }
          },
          "401": {
            "description": "Token has expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUserTokenExpiredResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotfound"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/goal": {
      "put": {
        "tags": ["User"],
        "summary": "Update user goal",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "description": "Description of request parameters:**yourGoal** - string, User`s new goal.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserGoal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data for the HomePage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewGoalAndNewRecommended"
                }
              }
            }
          },
          "401": {
            "description": "Token has expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUserTokenExpiredResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotfound"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/weight": {
      "post": {
        "tags": ["User"],
        "summary": "Update user weight",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "description": "Description of request parameters:**weight** - integer, User`s new weight.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserWeight"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Information about the current weight of the User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendCurrentUserWeightRecommendedCaloriesAndWater"
                }
              }
            }
          },
          "401": {
            "description": "Token has expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUserTokenExpiredResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotfound"
                }
              }
            }
          }
        }
      }
    },

    "/api/user/food-intake": {
      "get": {
        "tags": ["User"],
        "summary": "Information about the eat food for the current date",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Date for the HomePage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendingUserData"
                }
              }
            }
          },
          "401": {
            "description": "Token has expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUserTokenExpiredResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotfound"
                }
              }
            }
          }
        }
      }
    },

    "/api/recommended-food": {
      "get": {
        "tags": ["Food"],
        "summary": "List of recommended food",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of recommended food. Part of the list is shown. The entire list is located at: https://drive.google.com/file/d/1JDlPii3E6CDOH6b_7TFJrSJ98z5yiM-e/view",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRecommendedFood"
                }
              }
            }
          },
          "401": {
            "description": "Token has expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUserTokenExpiredResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotfound"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SignUpUser": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "age",
          "weight",
          "height",
          "kef",
          "gender",
          "yourGoal",
          "avatarURL"
        ],
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$",
            "example": "Jacob Mercer"
          },
          "email": {
            "type": "string",
            "pattern": "^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$",
            "example": "jacob@gmail.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "jac123"
          },
          "age": {
            "type": "integer",
            "minimum": 1,
            "maximum": 110,
            "example": "30"
          },
          "weight": {
            "type": "integer",
            "minimum": 5,
            "maximum": 300,
            "example": "82"
          },
          "height": {
            "type": "integer",
            "minimum": 50,
            "maximum": 240,
            "example": "180"
          },
          "kef": {
            "type": "number",
            "enum": [1.2, 1.375, 1.55, 1.725, 1.9],
            "example": 1.2
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "example": "male"
          },
          "yourGoal": {
            "type": "string",
            "enum": ["lose fat", "maintain", "gain muscle"],
            "example": "lose fat"
          },
          "avatarURL": {
            "type": "string",
            "example": "//www.gravatar.com/avatar/b2e1e89c9ca5c379490250f163e402b8"
          },
          "token": {
            "type": "string",
            "default": ""
          }
        }
      },
      "SignInUser": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "pattern": "^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$",
            "example": "jacob@gmail.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "jac123"
          }
        }
      },
      "UserForgotPassword": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "pattern": "^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$",
            "example": "jacob@gmail.com"
          }
        }
      },
      "UserInformation": {
        "type": "object",
        "required": [
          "name",
          "age",
          "weight",
          "height",
          "kef",
          "gender",
          "yourGoal"
        ],
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$",
            "example": "Jacob Mercer"
          },
          "age": {
            "type": "integer",
            "minimum": 1,
            "maximum": 110,
            "example": "30"
          },
          "weight": {
            "type": "integer",
            "minimum": 5,
            "maximum": 300,
            "example": "80"
          },
          "height": {
            "type": "integer",
            "minimum": 50,
            "maximum": 240,
            "example": "180"
          },
          "kef": {
            "type": "number",
            "enum": [1.2, 1.375, 1.55, 1.725, 1.9],
            "example": 1.2
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "example": "male"
          },
          "yourGoal": {
            "type": "string",
            "enum": ["lose fat", "maintain", "gain muscle"],
            "example": "lose fat"
          }
        }
      },
      "NewUserGoal": {
        "type": "object",
        "required": ["yourGoal"],
        "properties": {
          "yourGoal": {
            "type": "string",
            "enum": ["lose fat", "maintain", "gain muscle"],
            "example": "maintain"
          }
        }
      },
      "CurrentUserWeight": {
        "type": "object",
        "required": ["weight"],
        "properties": {
          "weight": {
            "type": "integer",
            "minimum": 5,
            "maximum": 300,
            "example": "80"
          }
        }
      },

      "UserRegistration": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "code": {
            "type": "integer",
            "description": "Positive status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Registration success"
          }
        }
      },
      "UserWithTokenSerializer": {
        "type": "object",
        "required": ["token"],
        "properties": {
          "code": {
            "type": "integer",
            "description": "Positive status code",
            "example": 200
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ODQ0MDk5ZjgyZTc1ZDMwODcxNWEwMiIsImlhdCI6MTcwMzE3MTIyNywiZXhwIjoxNzAzOTk5MjI3fQ.z1OaNW9U46dDKQM7rZ7aOqnoDhXdLMztlCAExd3K4xI"
          }
        }
      },
      "NewPasswordResetResponse": {
        "type": "object",
        "required": ["message", "password"],
        "properties": {
          "code": {
            "type": "integer",
            "description": "Positive status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "This is your new password as requested"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$PRg4La5DiFnUA8C9xB02Z.0XSHmG.H4T1Z91koCTdeNzkV3yhjrFi"
          }
        }
      },
      "SignOutUser": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "code": {
            "type": "integer",
            "description": "Positive status code",
            "example": 204
          },
          "message": {
            "type": "string",
            "example": "Logout success"
          }
        }
      },
      "SendingUserData": {
        "type": "object",
        "required": [
          "user",
          "recommendedWater",
          "waterToday",
          "recommendedCalories",
          "caloriesToday",
          "breakfastSumNutrientsToday",
          "lunchtSumNutrientsToday",
          "dinnerSumNutrientsToday",
          "snackSumNutrientsToday",
          "recommendedFood"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "description": "Positive status code",
            "example": 200
          },
          "user": {
            "type": "object",
            "required": [
              "name",
              "avatarURL",
              "age",
              "weight",
              "height",
              "kef",
              "gender",
              "yourGoal"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "Jacob Mercer"
              },
              "avatarURL": {
                "type": "string",
                "example": "https://res.cloudinary.com/dz0edwubh/image/upload/v1703167535/avatars/bok1n6coe1idlcjzkei6.jpg"
              },
              "age": {
                "type": "integer",
                "example": 30
              },
              "weight": {
                "type": "integer",
                "example": 82
              },
              "height": {
                "type": "integer",
                "example": 180
              },
              "kef": {
                "type": "number",
                "example": 1.2
              },
              "gender": {
                "type": "string",
                "example": "male"
              },
              "yourGoal": {
                "type": "string",
                "example": "lose fat"
              }
            }
          },
          "recommendedWater": {
            "type": "integer",
            "example": 2500
          },
          "waterToday": {
            "type": "object",
            "required": ["water", "date"],
            "properties": {
              "water": {
                "type": "integer",
                "example": 2400
              },
              "date": {
                "type": "string",
                "example": "2023.12.19"
              }
            }
          },
          "recommendedCalories": {
            "type": "object",
            "required": ["calories", "protein", "fat", "carbohydrates"],
            "properties": {
              "calories": {
                "type": "integer",
                "example": 2260
              },
              "protein": {
                "type": "integer",
                "example": 560
              },
              "fat": {
                "type": "integer",
                "example": 450
              },
              "carbohydrates": {
                "type": "integer",
                "example": 1250
              }
            }
          },
          "caloriesToday": {
            "type": "object",
            "required": ["calories", "date", "protein", "fat", "carbohydrates"],
            "properties": {
              "calories": {
                "type": "integer",
                "example": 2250
              },
              "protein": {
                "type": "integer",
                "example": 560
              },
              "fat": {
                "type": "integer",
                "example": 450
              },
              "carbohydrates": {
                "type": "integer",
                "example": 1240
              },
              "date": {
                "type": "string",
                "example": "2023.12.19"
              }
            }
          },
          "breakfastSumNutrientsToday": {
            "type": "object",
            "required": ["calories", "carbohydrates", "protein", "fat"],
            "properties": {
              "calories": {
                "type": "integer",
                "description": "Calories consumed during the day",
                "example": 52
              },
              "carbohydrates": {
                "type": "number",
                "description": "Carbohydrates content in the product",
                "example": 14
              },
              "protein": {
                "type": "number",
                "description": "Protein content in the product",
                "example": 0.3
              },
              "fat": {
                "type": "number",
                "description": "Fat content in the product",
                "example": 0.2
              }
            }
          },
          "lunchtSumNutrientsToday": {
            "type": "object",
            "required": ["calories", "carbohydrates", "protein", "fat"],
            "properties": {
              "calories": {
                "type": "integer",
                "description": "Calories consumed during the day",
                "example": 52
              },
              "carbohydrates": {
                "type": "number",
                "description": "Carbohydrates content in the product",
                "example": 14
              },
              "protein": {
                "type": "number",
                "description": "Protein content in the product",
                "example": 0.3
              },
              "fat": {
                "type": "number",
                "description": "Fat content in the product",
                "example": 0.2
              }
            }
          },
          "dinnerSumNutrientsToday": {
            "type": "object",
            "required": ["calories", "carbohydrates", "protein", "fat"],
            "properties": {
              "calories": {
                "type": "integer",
                "description": "Calories consumed during the day",
                "example": 52
              },
              "carbohydrates": {
                "type": "number",
                "description": "Carbohydrates content in the product",
                "example": 14
              },
              "protein": {
                "type": "number",
                "description": "Protein content in the product",
                "example": 0.3
              },
              "fat": {
                "type": "number",
                "description": "Fat content in the product",
                "example": 0.2
              }
            }
          },
          "snackSumNutrientsToday": {
            "type": "object",
            "required": ["calories", "carbohydrates", "protein", "fat"],
            "properties": {
              "calories": {
                "type": "integer",
                "description": "Calories consumed during the day",
                "example": 52
              },
              "carbohydrates": {
                "type": "number",
                "description": "Carbohydrates content in the product",
                "example": 14
              },
              "protein": {
                "type": "number",
                "description": "Protein content in the product",
                "example": 0.3
              },
              "fat": {
                "type": "number",
                "description": "Fat content in the product",
                "example": 0.2
              }
            }
          },
          "recommendedFood": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "amount",
                "img",
                "calories",
                "nutrition"
              ],
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Product id ('mongoose')",
                  "example": "657d8520ab6cfb355180b1d6"
                },
                "name": {
                  "type": "string",
                  "description": "Product name",
                  "example": "Apples"
                },
                "amount": {
                  "type": "string",
                  "description": "Product amount",
                  "example": "100 g"
                },
                "img": {
                  "type": "string",
                  "description": "Product img",
                  "example": "https://ftp.goit.study/img/you_health/Apples.png"
                },
                "calories": {
                  "type": "integer",
                  "description": "Product calories",
                  "example": 52
                },
                "nutrition": {
                  "type": "object",
                  "required": ["carbohydrates", "protein", "fat"],
                  "properties": {
                    "carbohydrates": {
                      "type": "number",
                      "description": "Carbohydrates content in the product",
                      "example": 14
                    },
                    "protein": {
                      "type": "number",
                      "description": "Protein content in the product",
                      "example": 0.3
                    },
                    "fat": {
                      "type": "number",
                      "description": "Fat content in the product",
                      "example": 0.2
                    }
                  }
                }
              }
            },
            "example": [
              {
                "_id": "657d8520ab6cfb355180b1e8",
                "name": "Avocado",
                "amount": "100 g",
                "img": "https://ftp.goit.study/img/you_health/Avocado.png",
                "calories": 160,
                "nutrition": {
                  "carbohydrates": 8.5,
                  "protein": 2,
                  "fat": 14.7
                }
              },
              {
                "_id": "657d8520ab6cfb355180b1e9",
                "name": "Beans",
                "amount": "100 g",
                "img": "https://ftp.goit.study/img/you_health/Beans.png",
                "calories": 123,
                "nutrition": {
                  "carbohydrates": 22.3,
                  "protein": 8.7,
                  "fat": 0.4
                }
              },
              {
                "_id": "657d8520ab6cfb355180b1ea",
                "name": "Nuts",
                "amount": "100 g",
                "img": "https://ftp.goit.study/img/you_health/Nuts.png",
                "calories": 650,
                "nutrition": {
                  "carbohydrates": 15,
                  "protein": 22,
                  "fat": 55
                }
              },
              {
                "_id": "657d8520ab6cfb355180b1eb",
                "name": "Broccoli",
                "amount": "100 g",
                "img": "https://ftp.goit.study/img/you_health/Broccoli.png",
                "calories": 34,
                "nutrition": {
                  "carbohydrates": 6.6,
                  "protein": 2.8,
                  "fat": 0.4
                }
              }
            ]
          }
        }
      },
      "UpdateUserInformation": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "code": {
            "type": "integer",
            "description": "Positive status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Settings were successfully updated"
          }
        }
      },
      "NewGoalAndNewRecommended": {
        "type": "object",
        "required": ["yourGoal", "newRecommended"],
        "properties": {
          "code": {
            "type": "integer",
            "description": "Positive status code",
            "example": 200
          },
          "yourGoal": {
            "type": "string",
            "example": "maintain"
          },
          "newRecommended": {
            "type": "object",
            "required": ["calories", "protein", "fat", "carbohydrates"],
            "properties": {
              "calories": {
                "type": "integer",
                "example": 2260
              },
              "protein": {
                "type": "integer",
                "example": 680
              },
              "fat": {
                "type": "integer",
                "example": 450
              },
              "carbohydrates": {
                "type": "integer",
                "example": 1130
              }
            }
          }
        }
      },
      "SendCurrentUserWeightRecommendedCaloriesAndWater": {
        "type": "object",
        "required": ["weight", "recommendedCalories", "recommendedWater"],
        "properties": {
          "code": {
            "type": "integer",
            "description": "Positive status code",
            "example": 200
          },
          "weight": {
            "type": "integer",
            "example": 80
          },
          "recommendedCalories": {
            "type": "object",
            "required": ["calories", "protein", "fat", "carbohydrates"],
            "properties": {
              "calories": {
                "type": "integer",
                "example": 2200
              },
              "protein": {
                "type": "integer",
                "example": 550
              },
              "fat": {
                "type": "integer",
                "example": 440
              },
              "carbohydrates": {
                "type": "integer",
                "example": 1210
              }
            }
          },
          "recommendedWater": {
            "type": "integer",
            "example": 2400
          }
        }
      },

      "ListRecommendedFood": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["id", "name", "amount", "img", "calories", "nutrition"],
          "properties": {
            "_id": {
              "type": "string",
              "description": "Product id ('mongoose')",
              "example": "657d8520ab6cfb355180b1d6"
            },
            "name": {
              "type": "string",
              "description": "Product name",
              "example": "Apples"
            },
            "amount": {
              "type": "string",
              "description": "Product amount",
              "example": "100 g"
            },
            "img": {
              "type": "string",
              "description": "Product img",
              "example": "https://ftp.goit.study/img/you_health/Apples.png"
            },
            "calories": {
              "type": "integer",
              "description": "Product calories",
              "example": 52
            },
            "nutrition": {
              "type": "object",
              "required": ["carbohydrates", "protein", "fat"],
              "properties": {
                "carbohydrates": {
                  "type": "number",
                  "description": "Carbohydrates content in the product",
                  "example": 14
                },
                "protein": {
                  "type": "number",
                  "description": "Protein content in the product",
                  "example": 0.3
                },
                "fat": {
                  "type": "number",
                  "description": "Fat content in the product",
                  "example": 0.2
                }
              }
            }
          }
        },
        "example": [
          {
            "_id": "657d8520ab6cfb355180b1e8",
            "name": "Avocado",
            "amount": "100 g",
            "img": "https://ftp.goit.study/img/you_health/Avocado.png",
            "calories": 160,
            "nutrition": {
              "carbohydrates": 8.5,
              "protein": 2,
              "fat": 14.7
            }
          },
          {
            "_id": "657d8520ab6cfb355180b1e9",
            "name": "Beans",
            "amount": "100 g",
            "img": "https://ftp.goit.study/img/you_health/Beans.png",
            "calories": 123,
            "nutrition": {
              "carbohydrates": 22.3,
              "protein": 8.7,
              "fat": 0.4
            }
          },
          {
            "_id": "657d8520ab6cfb355180b1ea",
            "name": "Nuts",
            "amount": "100 g",
            "img": "https://ftp.goit.study/img/you_health/Nuts.png",
            "calories": 650,
            "nutrition": {
              "carbohydrates": 15,
              "protein": 22,
              "fat": 55
            }
          },
          {
            "_id": "657d8520ab6cfb355180b1eb",
            "name": "Broccoli",
            "amount": "100 g",
            "img": "https://ftp.goit.study/img/you_health/Broccoli.png",
            "calories": 34,
            "nutrition": {
              "carbohydrates": 6.6,
              "protein": 2.8,
              "fat": 0.4
            }
          }
        ]
      },

      "errorBadRequestResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error status code",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Bad request"
          }
        }
      },
      "errorUnauthorizedResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email or password is wrong"
          }
        }
      },
      "errorUserTokenExpiredResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Authentication failed. Please log in."
          }
        }
      },
      "errorNotfound": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error status code",
            "example": 404
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Notfound"
          }
        }
      },
      "errorRemoveCategoryResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error status code",
            "example": 409
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email already in us"
          }
        }
      }
    }
  }
}
