{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.1",
    "title": "HealthyHub",
    "description": "API documentation for project...",
    "contact": {
      "email": "artem1145819@gmail.com"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [{ "url": "http://localhost:5000" }],
  "tags": [
    { "name": "Auth", "description": "Authorization endpoints" },
    { "name": "User", "description": "User endpoints" },
    { "name": "Food", "description": "recommended-food" }
  ],

  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string",
            "description": "User name"
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string",
            "description": "User email"
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string",
            "description": "User password"
          },
          {
            "in": "query",
            "name": "age",
            "required": true,
            "type": "integer",
            "description": "User age"
          },
          {
            "in": "query",
            "name": "weight",
            "required": true,
            "type": "integer",
            "description": "User weight"
          },
          {
            "in": "query",
            "name": "height",
            "required": true,
            "type": "integer",
            "description": "User height"
          },
          {
            "in": "query",
            "name": "kef",
            "required": true,
            "type": "number",
            "description": "User kef"
          },
          {
            "in": "query",
            "name": "gender",
            "required": true,
            "type": "string",
            "description": "User gender"
          },
          {
            "in": "query",
            "name": "yourGoal",
            "required": true,
            "type": "string",
            "description": "User goal"
          },
          {
            "in": "query",
            "name": "avatarURL",
            "required": true,
            "type": "string",
            "description": "avatarURL"
          },
          {
            "in": "query",
            "name": "token",
            "required": false,
            "type": "string",
            "description": "Token for user, Default value"
          }
        ],
        "responses": {
          "200": {
            "description": "Created session for existing user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registerSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorRemoveCategoryResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logged in",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string",
            "description": "User email"
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string",
            "description": "User password"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the token to the user who logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth//forgot-password": {
        "post": {
          "tags": ["Auth"],
          "summary": "User forgot password",
          "parameters": [
            {
              "in": "query",
              "name": "email",
              "required": true,
              "type": "string",
              "description": "User email"
            }
          ],
          "responses": {
            "200": {
              "description": "Return the token to the user who logged in",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/loginSchema"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request (validation error)",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/errorBadRequestResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Email or password is wrong",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/errorUnauthorizedResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
  

  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "registerSchema": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "loginSchema": {
        "type": "object",
        "required": ["token"],
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1N2YyZmQ2MjAyNGNkMzFjYTNhZDYzNyIsImlhdCI6MTcwMjgzNDMwMCwiZXhwIjoxNzAzNjYyMzAwfQ.Ch5pvle9Oon-r1eErOkd4J7qYY8yAcyhHyhdongUTy4"
          }
        }

      },
      "errorBadRequestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failure"
          },
          "code": {
            "type": "integer",
            "description": "Error status code",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Bad request"
          }
        }
      },
      "errorUnauthorizedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failure"
          },
          "code": {
            "type": "integer",
            "description": "Error status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email or password is wrong"
          }
        }
      },
      "errorRemoveCategoryResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failure"
          },
          "code": {
            "type": "integer",
            "description": "Error status code",
            "example": 409
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email already in us"
          }
        }
      }
    }
  }
}
